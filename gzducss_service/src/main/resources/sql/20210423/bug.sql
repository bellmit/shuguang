-- 平阳县重复数据
DELETE from data_analysis_area where year = '2020' and area_id = '330326' and area_name = '/浙江省/温州市/平阳县';

create Index b_id_idx on disperse_utilize_detail(b_id);

-- 20年江北区图表分析数据丢失
INSERT INTO data_analysis_area (
	B_ID,
	AREA_ID,
	YEAR,
	STRAW_TYPE,
	STRAW_NAME,
	GRAIN_YIELD,
	GRASS_VALLEY_RATIO,
	COLLECTION_RATIO,
	SEED_AREA,
	RETURN_AREA,
	EXPORT_YIELD,
	THEORY_RESOURCE,
	COLLECT_RESOURCE,
	MARKET_ENT,
	FERTILIZES,
	FEEDS,
	FUELLEDS,
	BASE_MATS,
	MATERIALIZATIONS,
	REUSE,
	FERTILISINGD,
	FORAGED,
	FUELD,
	BASED,
	MATERIALD,
	RETURN_RESOURCE,
	OTHER,
	FERTILIZE,
	FEED,
	FUELLED,
	BASE_MAT,
	MATERIALIZATION,
	STRAW_UTILIZATION,
	TOTOL_RATE,
	COMPR_UTIL_INDEX,
	INDU_UTIL_INDEX
) SELECT DISTINCT C
.AREA_ID || C.YEAR || C.STRAW_TYPE,
C.AREA_ID,
C.YEAR,
C.STRAW_TYPE,
C.STRAW_NAME,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
FROM
	(
	SELECT A
		.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW C
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = C.AREA_ID
		AND A.YEAR = C.YEAR
	AND ( C.STATUS = 1 OR C.STATUS = 5 )
	AND A.YEAR = '2020' and a.area_id = '330205'
	) C;

UPDATE DATA_ANALYSIS_AREA A
SET GRAIN_YIELD = D.GRAIN_YIELD,
GRASS_VALLEY_RATIO = D.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = D.COLLECTION_RATIO,
SEED_AREA = D.SEED_AREA,
RETURN_AREA = D.RETURN_AREA,
EXPORT_YIELD = D.EXPORT_YIELD,
RETURN_RATIO = D.RETURN_RATIO
FROM
	(
	SELECT A
		.AREA_ID || A.YEAR || B.STRAW_TYPE AS B_ID,
		A.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME,
		B.GRAIN_YIELD,
		B.GRASS_VALLEY_RATIO,
		B.COLLECTION_RATIO,
		B.SEED_AREA,
		B.RETURN_AREA,
		B.EXPORT_YIELD,
		B.RETURN_RATIO
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW E
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = E.AREA_ID
		AND A.YEAR = E.YEAR
		AND ( E.STATUS = 1 OR E.STATUS = 5 )
		AND A.YEAR = '2020' and a.area_id = '330205'
	) D
WHERE
	D.B_ID = A.B_ID AND A.YEAR = '2020' and a.area_id = '330205';


UPDATE DATA_ANALYSIS_AREA A
SET THEORY_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO,
COLLECT_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO,
RETURN_RESOURCE = (
	CASE

			WHEN A.SEED_AREA = 0 THEN
			0 ELSE ( A.RETURN_AREA / A.SEED_AREA ) * A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO
		END
		),
		RETURN_PERS =
	CASE

		WHEN A.SEED_AREA = 0 THEN
	0 ELSE A.RETURN_AREA / A.SEED_AREA END
	WHERE A.YEAR = '2020' and a.area_id = '330205';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set COLLECT_RESOURCE = ceil( ceil(GRAIN_YIELD * GRASS_VALLEY_RATIO * 100)/100 * COLLECTION_RATIO *100)/100
from (SELECT a.year,a.area_id from ( SELECT year,area_id,sum(collect_resource) as "collect_resource" FROM data_analysis_area WHERE year = '2020' and area_id = '330205' GROUP BY year,area_id) a left join (SELECT id,year,area_id,collect_num,create_date from collect_flow WHERE year = '2020' and area_id = '330205') b on b.area_id = a.area_id
where a.collect_resource != b.collect_num and a.year = b.year) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '330205';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set RETURN_RESOURCE = round((collect_resource * return_ratio)/100,10)
from (SELECT a.year,a.area_id from ( SELECT year,area_id,round(sum((collect_resource * return_ratio)/100),10) as "re_num" FROM data_analysis_area WHERE year = '2020' and area_id = '330205' GROUP BY year,area_id) a left join (SELECT id,year,area_id,direct_return_num,create_date from collect_flow WHERE year = '2020' and area_id = '330205') b on b.area_id = a.area_id
      where a.re_num != b.direct_return_num and a.year = b.year and a.area_id = b.area_id) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '330205';

update data_analysis_area set RETURN_PERS = return_ratio / 100;

UPDATE DISPERSE_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM DISPERSE_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '330205';

UPDATE STRAW_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM STRAW_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '330205';

UPDATE DATA_ANALYSIS_AREA A
SET FERTILIZES = D.FERTILISING,
FEEDS = D.FORAGE,
FUELLEDS = D.FUEL,
BASE_MATS = D.BASE,
MATERIALIZATIONS = D.MATERIAL,
MARKET_ENT = D.MARKET_ENT,
OTHER = D.OTHER
FROM
	(
	SELECT C
		.B_ID,
		C.FERTILISING FERTILISING,
		C.FORAGE FORAGE,
		C.FUEL FUEL,
		C.BASE BASE,
		C.MATERIAL MATERIAL,
		C.OTHER,
		C.FERTILISING + C.FORAGE + C.FUEL + C.BASE + C.MATERIAL AS MARKET_ENT
	FROM
		(
		SELECT
			B.B_ID,
			SUM ( B.FERTILISING ) FERTILISING,
			SUM ( B.FORAGE ) FORAGE,
			SUM ( B.FUEL ) FUEL,
			SUM ( B.BASE ) BASE,
			SUM ( B.MATERIAL ) MATERIAL,
			SUM ( B.OTHER ) OTHER
		FROM
			STRAW_UTILIZE_DETAIL B
		GROUP BY
			B.B_ID
		) C
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '330205';

UPDATE DISPERSE_UTILIZE_DETAIL A
SET GRASS_VALLEY_RATIO = F.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = F.COLLECTION_RATIO,
PERS_TOTAL = FERTILISING + FORAGE + FUEL + BASE + MATERIAL,
DISPERSE_FERTILISING = (
	CASE
    WHEN A.APPLICATION = '0' THEN A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
	END ),
DISPERSE_FORAGE = (
    CASE
    WHEN A.APPLICATION = '1' THEN A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_FUEL = (
    CASE
    WHEN A.APPLICATION = '2' THEN A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_BASE = (
    CASE
    WHEN A.APPLICATION = '3' THEN A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_MATERIAL = (
    CASE
    WHEN A.APPLICATION = '4' THEN A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
CREATE_NUMBER = A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.001
FROM
    DATA_ANALYSIS_AREA F
    WHERE
	A.B_ID = F.B_ID AND F.YEAR = '2020' and f.area_id = '330205';


UPDATE DATA_ANALYSIS_AREA A
SET FERTILISINGD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_FERTILISING / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FORAGED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FORAGE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FUELD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FUEL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
BASED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_BASE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
MATERIALD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_MATERIAL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END
FROM
	(
	SELECT
		B_ID,
		SUM ( DISPERSE_FERTILISING ) DISPERSE_FERTILISING,
		SUM ( DISPERSE_FORAGE ) DISPERSE_FORAGE,
		SUM ( DISPERSE_FUEL ) DISPERSE_FUEL,
		SUM ( DISPERSE_BASE ) DISPERSE_BASE,
		SUM ( DISPERSE_MATERIAL ) DISPERSE_MATERIAL,
		SUM ( CREATE_NUMBER ) CREATE_NUMBER
	FROM
		DISPERSE_UTILIZE_DETAIL
	GROUP BY
		B_ID
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '330205';

UPDATE DATA_ANALYSIS_AREA
SET REUSE = FERTILISINGD + FORAGED + FUELD + BASED + MATERIALD WHERE YEAR = '2020' and area_id = '330205';

UPDATE DATA_ANALYSIS_AREA A
SET LEAVE_NUMBER = REUSE + MARKET_ENT,
STRAW_UTILIZATION = REUSE + MARKET_ENT + RETURN_RESOURCE + EXPORT_YIELD - OTHER,
FERTILIZE = FERTILIZES + FERTILISINGD + RETURN_RESOURCE,
FEED = FEEDS + FORAGED,
FUELLED = FUELLEDS + FUELD,
BASE_MAT = BASE_MATS + BASED,
MATERIALIZATION = MATERIALIZATIONS + MATERIALD
WHERE A.YEAR = '2020' and a.area_id = '330205';

UPDATE DATA_ANALYSIS_AREA A
SET TOTOL_RATE =
CASE
		WHEN COLLECT_RESOURCE = 0 THEN
		0 ELSE STRAW_UTILIZATION / COLLECT_RESOURCE
	END,
	USETOTAL = FERTILIZE + FEED + FUELLED + BASE_MAT + MATERIALIZATION,
	INDU_UTIL_INDEX =
CASE

	WHEN COLLECT_RESOURCE = 0 THEN
	0 ELSE MARKET_ENT / COLLECT_RESOURCE END WHERE A.YEAR = '2020' and a.area_id = '330205';

UPDATE DATA_ANALYSIS_AREA A
SET AREA_RETURN_NUMBER = B.AREA_RETURN_NUMBER,
AREA_RETURN_PERSENT = B.AREA_RETURN_PERSENT
FROM
	(
	SELECT
		AREA_ID,
		YEAR,
	CASE

			WHEN SUM ( COLLECT_RESOURCE ) = 0 THEN
			0 ELSE SUM ( RETURN_RESOURCE ) / SUM ( COLLECT_RESOURCE )
		END AS AREA_RETURN_PERSENT,
		SUM ( RETURN_RESOURCE ) AREA_RETURN_NUMBER
	FROM
		DATA_ANALYSIS_AREA
	where
	    year = '2020' and area_id = '330205'
	GROUP BY
		AREA_ID,
	YEAR
	) B
WHERE
	A.AREA_ID = B.AREA_ID
	AND A.YEAR = B.YEAR AND A.YEAR = '2020' and a.area_id = '330205';

update DATA_ANALYSIS_AREA set area_name = '/浙江省/宁波市/江北区' where area_id = '330205' and year = '2020';


-- 20年浙江省宁波市北仑区图表分析数据丢失
INSERT INTO data_analysis_area (
	B_ID,
	AREA_ID,
	YEAR,
	STRAW_TYPE,
	STRAW_NAME,
	GRAIN_YIELD,
	GRASS_VALLEY_RATIO,
	COLLECTION_RATIO,
	SEED_AREA,
	RETURN_AREA,
	EXPORT_YIELD,
	THEORY_RESOURCE,
	COLLECT_RESOURCE,
	MARKET_ENT,
	FERTILIZES,
	FEEDS,
	FUELLEDS,
	BASE_MATS,
	MATERIALIZATIONS,
	REUSE,
	FERTILISINGD,
	FORAGED,
	FUELD,
	BASED,
	MATERIALD,
	RETURN_RESOURCE,
	OTHER,
	FERTILIZE,
	FEED,
	FUELLED,
	BASE_MAT,
	MATERIALIZATION,
	STRAW_UTILIZATION,
	TOTOL_RATE,
	COMPR_UTIL_INDEX,
	INDU_UTIL_INDEX
) SELECT DISTINCT C
.AREA_ID || C.YEAR || C.STRAW_TYPE,
C.AREA_ID,
C.YEAR,
C.STRAW_TYPE,
C.STRAW_NAME,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
FROM
	(
	SELECT A
		.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW C
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = C.AREA_ID
		AND A.YEAR = C.YEAR
	AND ( C.STATUS = 1 OR C.STATUS = 5 )
	AND A.YEAR = '2020' and a.area_id = '330206'
	) C;

UPDATE DATA_ANALYSIS_AREA A
SET GRAIN_YIELD = D.GRAIN_YIELD,
GRASS_VALLEY_RATIO = D.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = D.COLLECTION_RATIO,
SEED_AREA = D.SEED_AREA,
RETURN_AREA = D.RETURN_AREA,
EXPORT_YIELD = D.EXPORT_YIELD,
RETURN_RATIO = D.RETURN_RATIO
FROM
	(
	SELECT A
		.AREA_ID || A.YEAR || B.STRAW_TYPE AS B_ID,
		A.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME,
		B.GRAIN_YIELD,
		B.GRASS_VALLEY_RATIO,
		B.COLLECTION_RATIO,
		B.SEED_AREA,
		B.RETURN_AREA,
		B.EXPORT_YIELD,
		B.RETURN_RATIO
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW E
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = E.AREA_ID
		AND A.YEAR = E.YEAR
		AND ( E.STATUS = 1 OR E.STATUS = 5 )
		AND A.YEAR = '2020' and a.area_id = '330206'
	) D
WHERE
	D.B_ID = A.B_ID AND A.YEAR = '2020' and a.area_id = '330206';


UPDATE DATA_ANALYSIS_AREA A
SET THEORY_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO,
COLLECT_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO,
RETURN_RESOURCE = (
	CASE

			WHEN A.SEED_AREA = 0 THEN
			0 ELSE ( A.RETURN_AREA / A.SEED_AREA ) * A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO
		END
		),
		RETURN_PERS =
	CASE

		WHEN A.SEED_AREA = 0 THEN
	0 ELSE A.RETURN_AREA / A.SEED_AREA END
	WHERE A.YEAR = '2020' and a.area_id = '330206';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set COLLECT_RESOURCE = ceil( ceil(GRAIN_YIELD * GRASS_VALLEY_RATIO * 100)/100 * COLLECTION_RATIO *100)/100
from (SELECT a.year,a.area_id from ( SELECT year,area_id,sum(collect_resource) as "collect_resource" FROM data_analysis_area WHERE year = '2020' and area_id = '330206' GROUP BY year,area_id) a left join (SELECT id,year,area_id,collect_num,create_date from collect_flow WHERE year = '2020' and area_id = '330206') b on b.area_id = a.area_id
where a.collect_resource != b.collect_num and a.year = b.year) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '330206';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set RETURN_RESOURCE = round((collect_resource * return_ratio)/100,10)
from (SELECT a.year,a.area_id from ( SELECT year,area_id,round(sum((collect_resource * return_ratio)/100),10) as "re_num" FROM data_analysis_area WHERE year = '2020' and area_id = '330206' GROUP BY year,area_id) a left join (SELECT id,year,area_id,direct_return_num,create_date from collect_flow WHERE year = '2020' and area_id = '330206') b on b.area_id = a.area_id
      where a.re_num != b.direct_return_num and a.year = b.year and a.area_id = b.area_id) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '330206';

update data_analysis_area set RETURN_PERS = return_ratio / 100;

UPDATE DISPERSE_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM DISPERSE_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '330206';

UPDATE STRAW_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM STRAW_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '330206';

UPDATE DATA_ANALYSIS_AREA A
SET FERTILIZES = D.FERTILISING,
FEEDS = D.FORAGE,
FUELLEDS = D.FUEL,
BASE_MATS = D.BASE,
MATERIALIZATIONS = D.MATERIAL,
MARKET_ENT = D.MARKET_ENT,
OTHER = D.OTHER
FROM
	(
	SELECT C
		.B_ID,
		C.FERTILISING FERTILISING,
		C.FORAGE FORAGE,
		C.FUEL FUEL,
		C.BASE BASE,
		C.MATERIAL MATERIAL,
		C.OTHER,
		C.FERTILISING + C.FORAGE + C.FUEL + C.BASE + C.MATERIAL AS MARKET_ENT
	FROM
		(
		SELECT
			B.B_ID,
			SUM ( B.FERTILISING ) FERTILISING,
			SUM ( B.FORAGE ) FORAGE,
			SUM ( B.FUEL ) FUEL,
			SUM ( B.BASE ) BASE,
			SUM ( B.MATERIAL ) MATERIAL,
			SUM ( B.OTHER ) OTHER
		FROM
			STRAW_UTILIZE_DETAIL B
		GROUP BY
			B.B_ID
		) C
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '330206';

UPDATE DISPERSE_UTILIZE_DETAIL A
SET GRASS_VALLEY_RATIO = F.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = F.COLLECTION_RATIO,
PERS_TOTAL = FERTILISING + FORAGE + FUEL + BASE + MATERIAL,
DISPERSE_FERTILISING = (
	CASE
    WHEN A.APPLICATION = '0' THEN A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
	END ),
DISPERSE_FORAGE = (
    CASE
    WHEN A.APPLICATION = '1' THEN A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_FUEL = (
    CASE
    WHEN A.APPLICATION = '2' THEN A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_BASE = (
    CASE
    WHEN A.APPLICATION = '3' THEN A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_MATERIAL = (
    CASE
    WHEN A.APPLICATION = '4' THEN A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
CREATE_NUMBER = A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.001
FROM
    DATA_ANALYSIS_AREA F
    WHERE
	A.B_ID = F.B_ID AND F.YEAR = '2020' and f.area_id = '330206';


UPDATE DATA_ANALYSIS_AREA A
SET FERTILISINGD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_FERTILISING / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FORAGED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FORAGE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FUELD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FUEL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
BASED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_BASE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
MATERIALD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_MATERIAL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END
FROM
	(
	SELECT
		B_ID,
		SUM ( DISPERSE_FERTILISING ) DISPERSE_FERTILISING,
		SUM ( DISPERSE_FORAGE ) DISPERSE_FORAGE,
		SUM ( DISPERSE_FUEL ) DISPERSE_FUEL,
		SUM ( DISPERSE_BASE ) DISPERSE_BASE,
		SUM ( DISPERSE_MATERIAL ) DISPERSE_MATERIAL,
		SUM ( CREATE_NUMBER ) CREATE_NUMBER
	FROM
		DISPERSE_UTILIZE_DETAIL
	GROUP BY
		B_ID
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '330206';

UPDATE DATA_ANALYSIS_AREA
SET REUSE = FERTILISINGD + FORAGED + FUELD + BASED + MATERIALD WHERE YEAR = '2020' and area_id = '330206';

UPDATE DATA_ANALYSIS_AREA A
SET LEAVE_NUMBER = REUSE + MARKET_ENT,
STRAW_UTILIZATION = REUSE + MARKET_ENT + RETURN_RESOURCE + EXPORT_YIELD - OTHER,
FERTILIZE = FERTILIZES + FERTILISINGD + RETURN_RESOURCE,
FEED = FEEDS + FORAGED,
FUELLED = FUELLEDS + FUELD,
BASE_MAT = BASE_MATS + BASED,
MATERIALIZATION = MATERIALIZATIONS + MATERIALD
WHERE A.YEAR = '2020' and a.area_id = '330206';

UPDATE DATA_ANALYSIS_AREA A
SET TOTOL_RATE =
CASE
		WHEN COLLECT_RESOURCE = 0 THEN
		0 ELSE STRAW_UTILIZATION / COLLECT_RESOURCE
	END,
	USETOTAL = FERTILIZE + FEED + FUELLED + BASE_MAT + MATERIALIZATION,
	INDU_UTIL_INDEX =
CASE

	WHEN COLLECT_RESOURCE = 0 THEN
	0 ELSE MARKET_ENT / COLLECT_RESOURCE END WHERE A.YEAR = '2020' and a.area_id = '330206';

UPDATE DATA_ANALYSIS_AREA A
SET AREA_RETURN_NUMBER = B.AREA_RETURN_NUMBER,
AREA_RETURN_PERSENT = B.AREA_RETURN_PERSENT
FROM
	(
	SELECT
		AREA_ID,
		YEAR,
	CASE

			WHEN SUM ( COLLECT_RESOURCE ) = 0 THEN
			0 ELSE SUM ( RETURN_RESOURCE ) / SUM ( COLLECT_RESOURCE )
		END AS AREA_RETURN_PERSENT,
		SUM ( RETURN_RESOURCE ) AREA_RETURN_NUMBER
	FROM
		DATA_ANALYSIS_AREA
	where
	    year = '2020' and area_id = '330206'
	GROUP BY
		AREA_ID,
	YEAR
	) B
WHERE
	A.AREA_ID = B.AREA_ID
	AND A.YEAR = B.YEAR AND A.YEAR = '2020' and a.area_id = '330206';

update DATA_ANALYSIS_AREA set area_name = '/浙江省/宁波市/北仑区' where area_id = '330206' and year = '2020';

-- 处理 20年海南省三亚市海棠区图表分析数据丢失问题
INSERT INTO data_analysis_area (
	B_ID,
	AREA_ID,
	YEAR,
	STRAW_TYPE,
	STRAW_NAME,
	GRAIN_YIELD,
	GRASS_VALLEY_RATIO,
	COLLECTION_RATIO,
	SEED_AREA,
	RETURN_AREA,
	EXPORT_YIELD,
	THEORY_RESOURCE,
	COLLECT_RESOURCE,
	MARKET_ENT,
	FERTILIZES,
	FEEDS,
	FUELLEDS,
	BASE_MATS,
	MATERIALIZATIONS,
	REUSE,
	FERTILISINGD,
	FORAGED,
	FUELD,
	BASED,
	MATERIALD,
	RETURN_RESOURCE,
	OTHER,
	FERTILIZE,
	FEED,
	FUELLED,
	BASE_MAT,
	MATERIALIZATION,
	STRAW_UTILIZATION,
	TOTOL_RATE,
	COMPR_UTIL_INDEX,
	INDU_UTIL_INDEX
) SELECT DISTINCT C
.AREA_ID || C.YEAR || C.STRAW_TYPE,
C.AREA_ID,
C.YEAR,
C.STRAW_TYPE,
C.STRAW_NAME,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
FROM
	(
	SELECT A
		.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW C
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = C.AREA_ID
		AND A.YEAR = C.YEAR
	AND ( C.STATUS = 1 OR C.STATUS = 5 )
	AND A.YEAR = '2020' and a.area_id = '460202'
	) C;

UPDATE DATA_ANALYSIS_AREA A
SET GRAIN_YIELD = D.GRAIN_YIELD,
GRASS_VALLEY_RATIO = D.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = D.COLLECTION_RATIO,
SEED_AREA = D.SEED_AREA,
RETURN_AREA = D.RETURN_AREA,
EXPORT_YIELD = D.EXPORT_YIELD,
RETURN_RATIO = D.RETURN_RATIO
FROM
	(
	SELECT A
		.AREA_ID || A.YEAR || B.STRAW_TYPE AS B_ID,
		A.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME,
		B.GRAIN_YIELD,
		B.GRASS_VALLEY_RATIO,
		B.COLLECTION_RATIO,
		B.SEED_AREA,
		B.RETURN_AREA,
		B.EXPORT_YIELD,
		B.RETURN_RATIO
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW E
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = E.AREA_ID
		AND A.YEAR = E.YEAR
		AND ( E.STATUS = 1 OR E.STATUS = 5 )
		AND A.YEAR = '2020' and a.area_id = '460202'
	) D
WHERE
	D.B_ID = A.B_ID AND A.YEAR = '2020' and a.area_id = '460202';


UPDATE DATA_ANALYSIS_AREA A
SET THEORY_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO,
COLLECT_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO,
RETURN_RESOURCE = (
	CASE

			WHEN A.SEED_AREA = 0 THEN
			0 ELSE ( A.RETURN_AREA / A.SEED_AREA ) * A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO
		END
		),
		RETURN_PERS =
	CASE

		WHEN A.SEED_AREA = 0 THEN
	0 ELSE A.RETURN_AREA / A.SEED_AREA END
	WHERE A.YEAR = '2020' and a.area_id = '460202';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set COLLECT_RESOURCE = ceil( ceil(GRAIN_YIELD * GRASS_VALLEY_RATIO * 100)/100 * COLLECTION_RATIO *100)/100
from (SELECT a.year,a.area_id from ( SELECT year,area_id,sum(collect_resource) as "collect_resource" FROM data_analysis_area WHERE year = '2020' and area_id = '460202' GROUP BY year,area_id) a left join (SELECT id,year,area_id,collect_num,create_date from collect_flow WHERE year = '2020' and area_id = '460202') b on b.area_id = a.area_id
where a.collect_resource != b.collect_num and a.year = b.year) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '460202';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set RETURN_RESOURCE = round((collect_resource * return_ratio)/100,10)
from (SELECT a.year,a.area_id from ( SELECT year,area_id,round(sum((collect_resource * return_ratio)/100),10) as "re_num" FROM data_analysis_area WHERE year = '2020' and area_id = '460202' GROUP BY year,area_id) a left join (SELECT id,year,area_id,direct_return_num,create_date from collect_flow WHERE year = '2020' and area_id = '460202') b on b.area_id = a.area_id
      where a.re_num != b.direct_return_num and a.year = b.year and a.area_id = b.area_id) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '460202';

update data_analysis_area set RETURN_PERS = return_ratio / 100;

UPDATE DISPERSE_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM DISPERSE_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '460202';

UPDATE STRAW_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM STRAW_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '460202';

UPDATE DATA_ANALYSIS_AREA A
SET FERTILIZES = D.FERTILISING,
FEEDS = D.FORAGE,
FUELLEDS = D.FUEL,
BASE_MATS = D.BASE,
MATERIALIZATIONS = D.MATERIAL,
MARKET_ENT = D.MARKET_ENT,
OTHER = D.OTHER
FROM
	(
	SELECT C
		.B_ID,
		C.FERTILISING FERTILISING,
		C.FORAGE FORAGE,
		C.FUEL FUEL,
		C.BASE BASE,
		C.MATERIAL MATERIAL,
		C.OTHER,
		C.FERTILISING + C.FORAGE + C.FUEL + C.BASE + C.MATERIAL AS MARKET_ENT
	FROM
		(
		SELECT
			B.B_ID,
			SUM ( B.FERTILISING ) FERTILISING,
			SUM ( B.FORAGE ) FORAGE,
			SUM ( B.FUEL ) FUEL,
			SUM ( B.BASE ) BASE,
			SUM ( B.MATERIAL ) MATERIAL,
			SUM ( B.OTHER ) OTHER
		FROM
			STRAW_UTILIZE_DETAIL B
		GROUP BY
			B.B_ID
		) C
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '460202';

UPDATE DISPERSE_UTILIZE_DETAIL A
SET GRASS_VALLEY_RATIO = F.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = F.COLLECTION_RATIO,
PERS_TOTAL = FERTILISING + FORAGE + FUEL + BASE + MATERIAL,
DISPERSE_FERTILISING = (
	CASE
    WHEN A.APPLICATION = '0' THEN A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
	END ),
DISPERSE_FORAGE = (
    CASE
    WHEN A.APPLICATION = '1' THEN A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_FUEL = (
    CASE
    WHEN A.APPLICATION = '2' THEN A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_BASE = (
    CASE
    WHEN A.APPLICATION = '3' THEN A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_MATERIAL = (
    CASE
    WHEN A.APPLICATION = '4' THEN A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
CREATE_NUMBER = A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.001
FROM
    DATA_ANALYSIS_AREA F
    WHERE
	A.B_ID = F.B_ID AND F.YEAR = '2020' and f.area_id = '460202';


UPDATE DATA_ANALYSIS_AREA A
SET FERTILISINGD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_FERTILISING / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FORAGED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FORAGE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FUELD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FUEL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
BASED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_BASE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
MATERIALD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_MATERIAL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END
FROM
	(
	SELECT
		B_ID,
		SUM ( DISPERSE_FERTILISING ) DISPERSE_FERTILISING,
		SUM ( DISPERSE_FORAGE ) DISPERSE_FORAGE,
		SUM ( DISPERSE_FUEL ) DISPERSE_FUEL,
		SUM ( DISPERSE_BASE ) DISPERSE_BASE,
		SUM ( DISPERSE_MATERIAL ) DISPERSE_MATERIAL,
		SUM ( CREATE_NUMBER ) CREATE_NUMBER
	FROM
		DISPERSE_UTILIZE_DETAIL
	GROUP BY
		B_ID
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '460202';

UPDATE DATA_ANALYSIS_AREA
SET REUSE = FERTILISINGD + FORAGED + FUELD + BASED + MATERIALD WHERE YEAR = '2020' and area_id = '460202';

UPDATE DATA_ANALYSIS_AREA A
SET LEAVE_NUMBER = REUSE + MARKET_ENT,
STRAW_UTILIZATION = REUSE + MARKET_ENT + RETURN_RESOURCE + EXPORT_YIELD - OTHER,
FERTILIZE = FERTILIZES + FERTILISINGD + RETURN_RESOURCE,
FEED = FEEDS + FORAGED,
FUELLED = FUELLEDS + FUELD,
BASE_MAT = BASE_MATS + BASED,
MATERIALIZATION = MATERIALIZATIONS + MATERIALD
WHERE A.YEAR = '2020' and a.area_id = '460202';

UPDATE DATA_ANALYSIS_AREA A
SET TOTOL_RATE =
CASE
		WHEN COLLECT_RESOURCE = 0 THEN
		0 ELSE STRAW_UTILIZATION / COLLECT_RESOURCE
	END,
	USETOTAL = FERTILIZE + FEED + FUELLED + BASE_MAT + MATERIALIZATION,
	INDU_UTIL_INDEX =
CASE

	WHEN COLLECT_RESOURCE = 0 THEN
	0 ELSE MARKET_ENT / COLLECT_RESOURCE END WHERE A.YEAR = '2020' and a.area_id = '460202';

UPDATE DATA_ANALYSIS_AREA A
SET AREA_RETURN_NUMBER = B.AREA_RETURN_NUMBER,
AREA_RETURN_PERSENT = B.AREA_RETURN_PERSENT
FROM
	(
	SELECT
		AREA_ID,
		YEAR,
	CASE

			WHEN SUM ( COLLECT_RESOURCE ) = 0 THEN
			0 ELSE SUM ( RETURN_RESOURCE ) / SUM ( COLLECT_RESOURCE )
		END AS AREA_RETURN_PERSENT,
		SUM ( RETURN_RESOURCE ) AREA_RETURN_NUMBER
	FROM
		DATA_ANALYSIS_AREA
	where
	    year = '2020' and area_id = '460202'
	GROUP BY
		AREA_ID,
	YEAR
	) B
WHERE
	A.AREA_ID = B.AREA_ID
	AND A.YEAR = B.YEAR AND A.YEAR = '2020' and a.area_id = '460202';

update DATA_ANALYSIS_AREA set area_name = '/海南省/三亚市/海棠区' where area_id = '460202' and year = '2020';

-- 处理 20年海南省三亚市吉阳区 图表分析数据丢失问题
INSERT INTO data_analysis_area (
	B_ID,
	AREA_ID,
	YEAR,
	STRAW_TYPE,
	STRAW_NAME,
	GRAIN_YIELD,
	GRASS_VALLEY_RATIO,
	COLLECTION_RATIO,
	SEED_AREA,
	RETURN_AREA,
	EXPORT_YIELD,
	THEORY_RESOURCE,
	COLLECT_RESOURCE,
	MARKET_ENT,
	FERTILIZES,
	FEEDS,
	FUELLEDS,
	BASE_MATS,
	MATERIALIZATIONS,
	REUSE,
	FERTILISINGD,
	FORAGED,
	FUELD,
	BASED,
	MATERIALD,
	RETURN_RESOURCE,
	OTHER,
	FERTILIZE,
	FEED,
	FUELLED,
	BASE_MAT,
	MATERIALIZATION,
	STRAW_UTILIZATION,
	TOTOL_RATE,
	COMPR_UTIL_INDEX,
	INDU_UTIL_INDEX
) SELECT DISTINCT C
.AREA_ID || C.YEAR || C.STRAW_TYPE,
C.AREA_ID,
C.YEAR,
C.STRAW_TYPE,
C.STRAW_NAME,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
FROM
	(
	SELECT A
		.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW C
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = C.AREA_ID
		AND A.YEAR = C.YEAR
	AND ( C.STATUS = 1 OR C.STATUS = 5 )
	AND A.YEAR = '2020' and a.area_id = '460203'
	) C;

UPDATE DATA_ANALYSIS_AREA A
SET GRAIN_YIELD = D.GRAIN_YIELD,
GRASS_VALLEY_RATIO = D.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = D.COLLECTION_RATIO,
SEED_AREA = D.SEED_AREA,
RETURN_AREA = D.RETURN_AREA,
EXPORT_YIELD = D.EXPORT_YIELD,
RETURN_RATIO = D.RETURN_RATIO
FROM
	(
	SELECT A
		.AREA_ID || A.YEAR || B.STRAW_TYPE AS B_ID,
		A.AREA_ID,
		A.YEAR,
		B.STRAW_TYPE,
		B.STRAW_NAME,
		B.GRAIN_YIELD,
		B.GRASS_VALLEY_RATIO,
		B.COLLECTION_RATIO,
		B.SEED_AREA,
		B.RETURN_AREA,
		B.EXPORT_YIELD,
		B.RETURN_RATIO
	FROM
		PRO_STILL A,
		PRO_STILL_DETAIL B,
		COLLECT_FLOW E
	WHERE
		A.ID = B.PRO_STILL_ID
		AND A.AREA_ID = E.AREA_ID
		AND A.YEAR = E.YEAR
		AND ( E.STATUS = 1 OR E.STATUS = 5 )
		AND A.YEAR = '2020' and a.area_id = '460203'
	) D
WHERE
	D.B_ID = A.B_ID AND A.YEAR = '2020' and a.area_id = '460203';


UPDATE DATA_ANALYSIS_AREA A
SET THEORY_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO,
COLLECT_RESOURCE = A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO,
RETURN_RESOURCE = (
	CASE

			WHEN A.SEED_AREA = 0 THEN
			0 ELSE ( A.RETURN_AREA / A.SEED_AREA ) * A.GRAIN_YIELD * A.GRASS_VALLEY_RATIO * A.COLLECTION_RATIO
		END
		),
		RETURN_PERS =
	CASE

		WHEN A.SEED_AREA = 0 THEN
	0 ELSE A.RETURN_AREA / A.SEED_AREA END
	WHERE A.YEAR = '2020' and a.area_id = '460203';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set COLLECT_RESOURCE = ceil( ceil(GRAIN_YIELD * GRASS_VALLEY_RATIO * 100)/100 * COLLECTION_RATIO *100)/100
from (SELECT a.year,a.area_id from ( SELECT year,area_id,sum(collect_resource) as "collect_resource" FROM data_analysis_area WHERE year = '2020' and area_id = '460203' GROUP BY year,area_id) a left join (SELECT id,year,area_id,collect_num,create_date from collect_flow WHERE year = '2020' and area_id = '460203') b on b.area_id = a.area_id
where a.collect_resource != b.collect_num and a.year = b.year) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '460203';

-- 以 collect_flow 表为准，更新 data_analysis_area 表的数据
update data_analysis_area a
set RETURN_RESOURCE = round((collect_resource * return_ratio)/100,10)
from (SELECT a.year,a.area_id from ( SELECT year,area_id,round(sum((collect_resource * return_ratio)/100),10) as "re_num" FROM data_analysis_area WHERE year = '2020' and area_id = '460203' GROUP BY year,area_id) a left join (SELECT id,year,area_id,direct_return_num,create_date from collect_flow WHERE year = '2020' and area_id = '460203') b on b.area_id = a.area_id
      where a.re_num != b.direct_return_num and a.year = b.year and a.area_id = b.area_id) b
where a.year = b.year and a.area_id = b.area_id AND A.YEAR = '2020' and a.area_id = '460203';

update data_analysis_area set RETURN_PERS = return_ratio / 100;

UPDATE DISPERSE_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM DISPERSE_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '460203';

UPDATE STRAW_UTILIZE_DETAIL A
SET B_ID = B.AREA_ID || B.YEAR || A.STRAW_TYPE
FROM STRAW_UTILIZE B
WHERE A.UTILIZE_ID = B.ID and b.year = '2020' and b.area_id = '460203';

UPDATE DATA_ANALYSIS_AREA A
SET FERTILIZES = D.FERTILISING,
FEEDS = D.FORAGE,
FUELLEDS = D.FUEL,
BASE_MATS = D.BASE,
MATERIALIZATIONS = D.MATERIAL,
MARKET_ENT = D.MARKET_ENT,
OTHER = D.OTHER
FROM
	(
	SELECT C
		.B_ID,
		C.FERTILISING FERTILISING,
		C.FORAGE FORAGE,
		C.FUEL FUEL,
		C.BASE BASE,
		C.MATERIAL MATERIAL,
		C.OTHER,
		C.FERTILISING + C.FORAGE + C.FUEL + C.BASE + C.MATERIAL AS MARKET_ENT
	FROM
		(
		SELECT
			B.B_ID,
			SUM ( B.FERTILISING ) FERTILISING,
			SUM ( B.FORAGE ) FORAGE,
			SUM ( B.FUEL ) FUEL,
			SUM ( B.BASE ) BASE,
			SUM ( B.MATERIAL ) MATERIAL,
			SUM ( B.OTHER ) OTHER
		FROM
			STRAW_UTILIZE_DETAIL B
		GROUP BY
			B.B_ID
		) C
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '460203';

UPDATE DISPERSE_UTILIZE_DETAIL A
SET GRASS_VALLEY_RATIO = F.GRASS_VALLEY_RATIO,
COLLECTION_RATIO = F.COLLECTION_RATIO,
PERS_TOTAL = FERTILISING + FORAGE + FUEL + BASE + MATERIAL,
DISPERSE_FERTILISING = (
	CASE
    WHEN A.APPLICATION = '0' THEN A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FERTILISING * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
	END ),
DISPERSE_FORAGE = (
    CASE
    WHEN A.APPLICATION = '1' THEN A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FORAGE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_FUEL = (
    CASE
    WHEN A.APPLICATION = '2' THEN A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.FUEL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_BASE = (
    CASE
    WHEN A.APPLICATION = '3' THEN A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.BASE * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
DISPERSE_MATERIAL = (
    CASE
    WHEN A.APPLICATION = '4' THEN A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001 + A.REUSE
    ELSE A.MATERIAL * A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.00001
    END ),
CREATE_NUMBER = A.SOWN_AREA * A.YIELD_PER_MU * F.GRASS_VALLEY_RATIO * F.COLLECTION_RATIO * 0.001
FROM
    DATA_ANALYSIS_AREA F
    WHERE
	A.B_ID = F.B_ID AND F.YEAR = '2020' and f.area_id = '460203';


UPDATE DATA_ANALYSIS_AREA A
SET FERTILISINGD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_FERTILISING / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FORAGED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FORAGE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
FUELD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_FUEL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
BASED = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE D.DISPERSE_BASE / D.CREATE_NUMBER * A.COLLECT_RESOURCE END,
MATERIALD = CASE WHEN D.CREATE_NUMBER=0 THEN 0 ELSE  D.DISPERSE_MATERIAL / D.CREATE_NUMBER * A.COLLECT_RESOURCE END
FROM
	(
	SELECT
		B_ID,
		SUM ( DISPERSE_FERTILISING ) DISPERSE_FERTILISING,
		SUM ( DISPERSE_FORAGE ) DISPERSE_FORAGE,
		SUM ( DISPERSE_FUEL ) DISPERSE_FUEL,
		SUM ( DISPERSE_BASE ) DISPERSE_BASE,
		SUM ( DISPERSE_MATERIAL ) DISPERSE_MATERIAL,
		SUM ( CREATE_NUMBER ) CREATE_NUMBER
	FROM
		DISPERSE_UTILIZE_DETAIL
	GROUP BY
		B_ID
	) D
WHERE
	A.B_ID = D.B_ID AND A.YEAR = '2020' and a.area_id = '460203';

UPDATE DATA_ANALYSIS_AREA
SET REUSE = FERTILISINGD + FORAGED + FUELD + BASED + MATERIALD WHERE YEAR = '2020' and area_id = '460203';

UPDATE DATA_ANALYSIS_AREA A
SET LEAVE_NUMBER = REUSE + MARKET_ENT,
STRAW_UTILIZATION = REUSE + MARKET_ENT + RETURN_RESOURCE + EXPORT_YIELD - OTHER,
FERTILIZE = FERTILIZES + FERTILISINGD + RETURN_RESOURCE,
FEED = FEEDS + FORAGED,
FUELLED = FUELLEDS + FUELD,
BASE_MAT = BASE_MATS + BASED,
MATERIALIZATION = MATERIALIZATIONS + MATERIALD
WHERE A.YEAR = '2020' and a.area_id = '460203';

UPDATE DATA_ANALYSIS_AREA A
SET TOTOL_RATE =
CASE
		WHEN COLLECT_RESOURCE = 0 THEN
		0 ELSE STRAW_UTILIZATION / COLLECT_RESOURCE
	END,
	USETOTAL = FERTILIZE + FEED + FUELLED + BASE_MAT + MATERIALIZATION,
	INDU_UTIL_INDEX =
CASE

	WHEN COLLECT_RESOURCE = 0 THEN
	0 ELSE MARKET_ENT / COLLECT_RESOURCE END WHERE A.YEAR = '2020' and a.area_id = '460203';

UPDATE DATA_ANALYSIS_AREA A
SET AREA_RETURN_NUMBER = B.AREA_RETURN_NUMBER,
AREA_RETURN_PERSENT = B.AREA_RETURN_PERSENT
FROM
	(
	SELECT
		AREA_ID,
		YEAR,
	CASE

			WHEN SUM ( COLLECT_RESOURCE ) = 0 THEN
			0 ELSE SUM ( RETURN_RESOURCE ) / SUM ( COLLECT_RESOURCE )
		END AS AREA_RETURN_PERSENT,
		SUM ( RETURN_RESOURCE ) AREA_RETURN_NUMBER
	FROM
		DATA_ANALYSIS_AREA
	where
	    year = '2020' and area_id = '460203'
	GROUP BY
		AREA_ID,
	YEAR
	) B
WHERE
	A.AREA_ID = B.AREA_ID
	AND A.YEAR = B.YEAR AND A.YEAR = '2020' and a.area_id = '460203';

update DATA_ANALYSIS_AREA set area_name = '/海南省/三亚市/吉阳区' where area_id = '460203' and year = '2020';

-- straw_produce 处理重复数据
DELETE from straw_produce
where id in (
SELECT a.max_id from
( SELECT year,area_id,straw_type,count(1) as "count",max(id) as "max_id"
FROM "straw_produce" group by area_id,year,straw_type ) a
where a.count > 1 );